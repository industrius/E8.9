E8.9 Практическое задание

Сервис подсчёта с очередями

В этом задании пишем сервис, который считает, сколько раз встречается слово python на странице.

Этот сервис должен состоять из следующих частей:

Веб-форма для внесения сайтов в спискок задач;
Очередь, которая эти задания запускает;
Часть, которая обрабатывает результаты;
Табличка со статистикой с результатами.


Итак, задание считается выполненным, если:

прислана ссылка на github с репозиторием (0.5 баллов)
в репозитории есть README.md, в котором сказано, как работать с приложением (0.5 баллов)
в приложении реализована вебформа, куда можно добавлять адреса веб-сайтов (1 балл)
после добавления адреса создается задача для подсчета количества слов Python по этому адресу в Celery в форме модели, которая приведена выше (1 балл)
после завершения запроса результат (независимо успешный или нет) обрабатывается и сохраняется в форме модели Results. Запрос, который длится дольше 10 секунд считается неуспешным. (1 балл)
по запросу к эндпоинту отрисовывается табличка с результатами: на каком сайте сколько раз встретилось слово Python. Либо, если запрос был неуспешен, с кодом ошибки. (1 балл)
приложение должно быть упаковано в Docker, можно воспользоваться Docker-compose. (1 балл)
Бонусный балл: реализовать обновление результатов с помощью nsq, то есть, когда приходит результат, клиент публикует об этом сообщение, и слушающий клиент, подписанный на соответствующий топик, об этом узнает и обновляет информацию в табличке результатов. (2 балла)

Здесь приведены модели для sqlalchemy, и желательно пользоваться ими, но если по каким-то причинам вы считаете, что эти модели необходимо изменить, их можно поменять, объяснив это в README.md